{"version":3,"file":"static/js/390.80ab14ba.chunk.js","mappings":"oNAmGA,QA9FA,WACE,MAAOA,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAC5BK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,KAC7B,cAAEO,EAAa,aAAEC,EAAY,SAAEC,EAAQ,kBAAEC,IAAsBC,EAAAA,EAAAA,KAC/DC,GAAWC,EAAAA,EAAAA,MAkDjB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,UACrCC,EAAAA,EAAAA,MAAA,QAAMC,SAlDaC,UACrBC,EAAMC,iBAEN,IAEE,MAAMC,QAAiBC,MAAM,0EAAkD,CAC7EC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAE9B,WAAUG,WAAUE,YAGvC0B,QAAaP,EAASQ,OAE5B,GAAIR,EAASS,GAAI,CAEf,MAAMC,QAAsBT,MAAM,uEAA+C,CAC/EC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAE9B,WAAUG,eAG7BgC,QAAkBD,EAAcF,OAEtC,GAAIE,EAAcD,GAAI,CAEpBxB,GAAc,GACdC,EAAayB,EAAUC,WACvBzB,EAASwB,EAAUE,OAGnB,MAAMC,GAAiBC,EAAAA,EAAAA,IAAMJ,EAAUK,WAAY,WAAY,IAAIC,MAAQC,cAC3E9B,EAAkB0B,GAGlBxB,EAAS,IACX,MACEN,EAAS2B,EAAUQ,SAAW,eAElC,MAEEnC,EAASuB,EAAKY,SAAW,sBAE7B,CAAE,MAAOC,GACPC,QAAQtC,MAAM,sBAAuBqC,GACrCpC,EAAS,uCACX,GAKkCS,UAAU,sBAAqBC,SAAA,EAC7DF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,SACE8B,KAAK,OACLC,MAAO/C,EACPgD,SAAWC,GAAMhD,EAAYgD,EAAEC,OAAOH,OACtCI,YAAY,WACZC,UAAQ,OAGZpC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,SACE8B,KAAK,WACLC,MAAO5C,EACP6C,SAAWC,GAAM7C,EAAY6C,EAAEC,OAAOH,OACtCI,YAAY,WACZC,UAAQ,OAGZpC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,SACE8B,KAAK,OACLC,MAAO1C,EACP2C,SAAWC,GAAM3C,EAAS2C,EAAEC,OAAOH,OACnCI,YAAY,QACZC,UAAQ,MAGX7C,IAASS,EAAAA,EAAAA,KAAA,KAAGqC,MAAO,CAAEC,MAAO,OAAQpC,SAAEX,KACvCS,EAAAA,EAAAA,KAAA,UAAQ8B,KAAK,SAAQ5B,SAAC,iBAI9B,C","sources":["pages/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { parse } from 'date-fns';\r\nimport { useUser } from '../contexts/UserContext';\r\n\r\nfunction Register() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [error, setError] = useState('');\r\n  const { setIsLoggedIn, setTeacherId, setToken, setExpirationDate } = useUser();\r\n  const navigate = useNavigate();\r\n\r\n  const handleRegister = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      // Register the user\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/Main/register`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, password, title }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        // On successful registration, automatically log in\r\n        const loginResponse = await fetch(`${process.env.REACT_APP_API_URL}/Main/login`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ username, password }),\r\n        });\r\n\r\n        const loginData = await loginResponse.json();\r\n\r\n        if (loginResponse.ok) {\r\n          // Update context and localStorage\r\n          setIsLoggedIn(true);\r\n          setTeacherId(loginData.teacherId);\r\n          setToken(loginData.token);\r\n\r\n          // Properly parse expiration date\r\n          const expirationDate = parse(loginData.expiration, 'M/d/yyyy', new Date()).toISOString();\r\n          setExpirationDate(expirationDate);\r\n\r\n          // Redirect to home page after successful login\r\n          navigate('/');\r\n        } else {\r\n          setError(loginData.message || 'Login failed');\r\n        }\r\n      } else {\r\n        // Display server-provided error message\r\n        setError(data.message || 'Registration failed');\r\n      }\r\n    } catch (err) {\r\n      console.error('Registration Error:', err);\r\n      setError('An error occurred. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-register-wrapper\">\r\n      <form onSubmit={handleRegister} className=\"login-register-form\">\r\n        <h2>Register</h2>\r\n        <div className=\"form-element\">\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            placeholder=\"Username\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            placeholder=\"Password\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-element\">\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            placeholder=\"Title\"\r\n            required\r\n          />\r\n        </div>\r\n        {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"names":["username","setUsername","useState","password","setPassword","title","setTitle","error","setError","setIsLoggedIn","setTeacherId","setToken","setExpirationDate","useUser","navigate","useNavigate","_jsx","className","children","_jsxs","onSubmit","async","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","loginResponse","loginData","teacherId","token","expirationDate","parse","expiration","Date","toISOString","message","err","console","type","value","onChange","e","target","placeholder","required","style","color"],"sourceRoot":""}